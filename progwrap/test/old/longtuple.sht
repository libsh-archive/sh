// -*- C++ -*-

float c1val[] = { 0, -1, -2, -3, -4, -5, -6 };
ShAttrib<7, SH_CONST, float> c1( c1val );
ShProgram shader = SH_BEGIN_VERTEX_PROGRAM {
  ShNormal<7, SH_INPUT, float> SH_DECL(in); 
  ShVector<9, SH_INPUT, float> SH_DECL(not_used);
  ShInputTexCoord2f SH_DECL(shortu);
  ShVector<9, SH_OUTPUT, float> SH_DECL(not_usedo);
  ShOutputAttrib1f SH_DECL(out); 

  ShAttrib<6, SH_TEMP, float> SH_DECL(foo1);
  ShAttrib<6, SH_TEMP, float> SH_DECL(foo2);
  float c2val[] = { 0, 1, 2, 3, 4, 5, 6 }; 
  ShAttrib<7, SH_CONST, float> c2( c2val );

  int indices[] = {5, 4, 3, 2, 0, 1};
  foo1 = c1.swiz<6>(indices) + fillcast<6>(in);
  foo2(0,2,4,5) = c2(0, 2, 4, 5); 
  foo2(1,3) = ShConstAttrib2f(-1,-3);
  foo1 = foo1 + foo2;
  out = dot( foo1, foo2 ); 
} SH_END_PROGRAM;
