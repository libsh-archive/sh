# Makefile.in generated by automake 1.7.9 from Makefile.am.
# test/regress/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/libsh
pkglibdir = $(libdir)/libsh
pkgincludedir = $(includedir)/libsh
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /u/sjdutoit/svn/sh/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /u/sjdutoit/svn/sh/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /u/sjdutoit/svn/sh/missing --run autoconf
AUTOHEADER = ${SHELL} /u/sjdutoit/svn/sh/missing --run autoheader
AUTOMAKE = ${SHELL} /u/sjdutoit/svn/sh/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONVENIENCE_LTDL_FALSE = #
CONVENIENCE_LTDL_TRUE = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_ARB_BACKEND_FALSE = #
ENABLE_ARB_BACKEND_TRUE = 
ENABLE_ATI_BACKEND_FALSE = 
ENABLE_ATI_BACKEND_TRUE = #
ENABLE_DOXYGEN_DOCS_FALSE = #
ENABLE_DOXYGEN_DOCS_TRUE = 
ENABLE_GL_BACKENDS_FALSE = #
ENABLE_GL_BACKENDS_TRUE = 
ENABLE_SM_BACKEND_FALSE = 
ENABLE_SM_BACKEND_TRUE = #
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_LTDL_FALSE = 
INSTALL_LTDL_TRUE = #
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBADD_DL = -ldl
LIBLTDL = ${top_builddir}/libltdl/libltdlc.la
LIBOBJS = 
LIBS = -lpng 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTDLINCL = -I${top_srcdir}/libltdl
LTLIBOBJS = 
MAKEINFO = ${SHELL} /u/sjdutoit/svn/sh/missing --run makeinfo
OBJEXT = o
PACKAGE = libsh
PACKAGE_BUGREPORT = libsh-devel@lists.sourceforge.net
PACKAGE_NAME = sh
PACKAGE_STRING = sh 0.7.1
PACKAGE_TARNAME = libsh
PACKAGE_VERSION = 0.7.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.7.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /u/sjdutoit/svn/sh/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /u/sjdutoit/install-sh/0.7.1
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  libltdl
sysconfdir = ${prefix}/etc
target_alias = 
INCLUDES = -I../../src
AM_CXXFLAGS = -Wall -g -O0
AM_LDFLAGS = -g -L../../src
LDADD = -lsh -lGL
TESTS = ADD MUL DIV SLT SLE SGT SGE SEQ SNE ABS ACOS ASIN ATAN ATAN2 CEIL COS DOT \
	EXP EXP2 EXP10 FLR FRAC LRP MAD MAX MIN MOD LOG LOG2 LOG10 POW SIN SQRT TAN NORM XPD COND

check_PROGRAMS = $(TESTS)
BACKENDS = arb cpu
EXTRA_DIST = regress.py

ADD_SOURCES = ADD.cpp test.cpp
MUL_SOURCES = MUL.cpp test.cpp
DIV_SOURCES = DIV.cpp test.cpp
SLT_SOURCES = SLT.cpp test.cpp
SLE_SOURCES = SLE.cpp test.cpp
SGT_SOURCES = SGT.cpp test.cpp
SGE_SOURCES = SGE.cpp test.cpp
SEQ_SOURCES = SEQ.cpp test.cpp
SNE_SOURCES = SNE.cpp test.cpp
ABS_SOURCES = ABS.cpp test.cpp
ACOS_SOURCES = ACOS.cpp test.cpp
ASIN_SOURCES = ASIN.cpp test.cpp
ATAN_SOURCES = ATAN.cpp test.cpp
ATAN2_SOURCES = ATAN2.cpp test.cpp
CEIL_SOURCES = CEIL.cpp test.cpp
COS_SOURCES = COS.cpp test.cpp
DOT_SOURCES = DOT.cpp test.cpp
EXP_SOURCES = EXP.cpp test.cpp
EXP2_SOURCES = EXP2.cpp test.cpp
EXP10_SOURCES = EXP10.cpp test.cpp
FLR_SOURCES = FLR.cpp test.cpp
FRAC_SOURCES = FRAC.cpp test.cpp
LRP_SOURCES = LRP.cpp test.cpp
MAD_SOURCES = MAD.cpp test.cpp
MAX_SOURCES = MAX.cpp test.cpp
MIN_SOURCES = MIN.cpp test.cpp
MOD_SOURCES = MOD.cpp test.cpp
LOG_SOURCES = LOG.cpp test.cpp
LOG2_SOURCES = LOG2.cpp test.cpp
LOG10_SOURCES = LOG10.cpp test.cpp
POW_SOURCES = POW.cpp test.cpp
SIN_SOURCES = SIN.cpp test.cpp
SQRT_SOURCES = SQRT.cpp test.cpp
TAN_SOURCES = TAN.cpp test.cpp
NORM_SOURCES = NORM.cpp test.cpp
XPD_SOURCES = XPD.cpp test.cpp
COND_SOURCES = COND.cpp test.cpp
subdir = test/regress
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
check_PROGRAMS = ADD$(EXEEXT) MUL$(EXEEXT) DIV$(EXEEXT) SLT$(EXEEXT) \
	SLE$(EXEEXT) SGT$(EXEEXT) SGE$(EXEEXT) SEQ$(EXEEXT) \
	SNE$(EXEEXT) ABS$(EXEEXT) ACOS$(EXEEXT) ASIN$(EXEEXT) \
	ATAN$(EXEEXT) ATAN2$(EXEEXT) CEIL$(EXEEXT) COS$(EXEEXT) \
	DOT$(EXEEXT) EXP$(EXEEXT) EXP2$(EXEEXT) EXP10$(EXEEXT) \
	FLR$(EXEEXT) FRAC$(EXEEXT) LRP$(EXEEXT) MAD$(EXEEXT) \
	MAX$(EXEEXT) MIN$(EXEEXT) MOD$(EXEEXT) LOG$(EXEEXT) \
	LOG2$(EXEEXT) LOG10$(EXEEXT) POW$(EXEEXT) SIN$(EXEEXT) \
	SQRT$(EXEEXT) TAN$(EXEEXT) NORM$(EXEEXT) XPD$(EXEEXT) \
	COND$(EXEEXT)
am_ABS_OBJECTS = ABS.$(OBJEXT) test.$(OBJEXT)
ABS_OBJECTS = $(am_ABS_OBJECTS)
ABS_LDADD = $(LDADD)
ABS_DEPENDENCIES =
ABS_LDFLAGS =
am_ACOS_OBJECTS = ACOS.$(OBJEXT) test.$(OBJEXT)
ACOS_OBJECTS = $(am_ACOS_OBJECTS)
ACOS_LDADD = $(LDADD)
ACOS_DEPENDENCIES =
ACOS_LDFLAGS =
am_ADD_OBJECTS = ADD.$(OBJEXT) test.$(OBJEXT)
ADD_OBJECTS = $(am_ADD_OBJECTS)
ADD_LDADD = $(LDADD)
ADD_DEPENDENCIES =
ADD_LDFLAGS =
am_ASIN_OBJECTS = ASIN.$(OBJEXT) test.$(OBJEXT)
ASIN_OBJECTS = $(am_ASIN_OBJECTS)
ASIN_LDADD = $(LDADD)
ASIN_DEPENDENCIES =
ASIN_LDFLAGS =
am_ATAN_OBJECTS = ATAN.$(OBJEXT) test.$(OBJEXT)
ATAN_OBJECTS = $(am_ATAN_OBJECTS)
ATAN_LDADD = $(LDADD)
ATAN_DEPENDENCIES =
ATAN_LDFLAGS =
am_ATAN2_OBJECTS = ATAN2.$(OBJEXT) test.$(OBJEXT)
ATAN2_OBJECTS = $(am_ATAN2_OBJECTS)
ATAN2_LDADD = $(LDADD)
ATAN2_DEPENDENCIES =
ATAN2_LDFLAGS =
am_CEIL_OBJECTS = CEIL.$(OBJEXT) test.$(OBJEXT)
CEIL_OBJECTS = $(am_CEIL_OBJECTS)
CEIL_LDADD = $(LDADD)
CEIL_DEPENDENCIES =
CEIL_LDFLAGS =
am_COND_OBJECTS = COND.$(OBJEXT) test.$(OBJEXT)
COND_OBJECTS = $(am_COND_OBJECTS)
COND_LDADD = $(LDADD)
COND_DEPENDENCIES =
COND_LDFLAGS =
am_COS_OBJECTS = COS.$(OBJEXT) test.$(OBJEXT)
COS_OBJECTS = $(am_COS_OBJECTS)
COS_LDADD = $(LDADD)
COS_DEPENDENCIES =
COS_LDFLAGS =
am_DIV_OBJECTS = DIV.$(OBJEXT) test.$(OBJEXT)
DIV_OBJECTS = $(am_DIV_OBJECTS)
DIV_LDADD = $(LDADD)
DIV_DEPENDENCIES =
DIV_LDFLAGS =
am_DOT_OBJECTS = DOT.$(OBJEXT) test.$(OBJEXT)
DOT_OBJECTS = $(am_DOT_OBJECTS)
DOT_LDADD = $(LDADD)
DOT_DEPENDENCIES =
DOT_LDFLAGS =
am_EXP_OBJECTS = EXP.$(OBJEXT) test.$(OBJEXT)
EXP_OBJECTS = $(am_EXP_OBJECTS)
EXP_LDADD = $(LDADD)
EXP_DEPENDENCIES =
EXP_LDFLAGS =
am_EXP10_OBJECTS = EXP10.$(OBJEXT) test.$(OBJEXT)
EXP10_OBJECTS = $(am_EXP10_OBJECTS)
EXP10_LDADD = $(LDADD)
EXP10_DEPENDENCIES =
EXP10_LDFLAGS =
am_EXP2_OBJECTS = EXP2.$(OBJEXT) test.$(OBJEXT)
EXP2_OBJECTS = $(am_EXP2_OBJECTS)
EXP2_LDADD = $(LDADD)
EXP2_DEPENDENCIES =
EXP2_LDFLAGS =
am_FLR_OBJECTS = FLR.$(OBJEXT) test.$(OBJEXT)
FLR_OBJECTS = $(am_FLR_OBJECTS)
FLR_LDADD = $(LDADD)
FLR_DEPENDENCIES =
FLR_LDFLAGS =
am_FRAC_OBJECTS = FRAC.$(OBJEXT) test.$(OBJEXT)
FRAC_OBJECTS = $(am_FRAC_OBJECTS)
FRAC_LDADD = $(LDADD)
FRAC_DEPENDENCIES =
FRAC_LDFLAGS =
am_LOG_OBJECTS = LOG.$(OBJEXT) test.$(OBJEXT)
LOG_OBJECTS = $(am_LOG_OBJECTS)
LOG_LDADD = $(LDADD)
LOG_DEPENDENCIES =
LOG_LDFLAGS =
am_LOG10_OBJECTS = LOG10.$(OBJEXT) test.$(OBJEXT)
LOG10_OBJECTS = $(am_LOG10_OBJECTS)
LOG10_LDADD = $(LDADD)
LOG10_DEPENDENCIES =
LOG10_LDFLAGS =
am_LOG2_OBJECTS = LOG2.$(OBJEXT) test.$(OBJEXT)
LOG2_OBJECTS = $(am_LOG2_OBJECTS)
LOG2_LDADD = $(LDADD)
LOG2_DEPENDENCIES =
LOG2_LDFLAGS =
am_LRP_OBJECTS = LRP.$(OBJEXT) test.$(OBJEXT)
LRP_OBJECTS = $(am_LRP_OBJECTS)
LRP_LDADD = $(LDADD)
LRP_DEPENDENCIES =
LRP_LDFLAGS =
am_MAD_OBJECTS = MAD.$(OBJEXT) test.$(OBJEXT)
MAD_OBJECTS = $(am_MAD_OBJECTS)
MAD_LDADD = $(LDADD)
MAD_DEPENDENCIES =
MAD_LDFLAGS =
am_MAX_OBJECTS = MAX.$(OBJEXT) test.$(OBJEXT)
MAX_OBJECTS = $(am_MAX_OBJECTS)
MAX_LDADD = $(LDADD)
MAX_DEPENDENCIES =
MAX_LDFLAGS =
am_MIN_OBJECTS = MIN.$(OBJEXT) test.$(OBJEXT)
MIN_OBJECTS = $(am_MIN_OBJECTS)
MIN_LDADD = $(LDADD)
MIN_DEPENDENCIES =
MIN_LDFLAGS =
am_MOD_OBJECTS = MOD.$(OBJEXT) test.$(OBJEXT)
MOD_OBJECTS = $(am_MOD_OBJECTS)
MOD_LDADD = $(LDADD)
MOD_DEPENDENCIES =
MOD_LDFLAGS =
am_MUL_OBJECTS = MUL.$(OBJEXT) test.$(OBJEXT)
MUL_OBJECTS = $(am_MUL_OBJECTS)
MUL_LDADD = $(LDADD)
MUL_DEPENDENCIES =
MUL_LDFLAGS =
am_NORM_OBJECTS = NORM.$(OBJEXT) test.$(OBJEXT)
NORM_OBJECTS = $(am_NORM_OBJECTS)
NORM_LDADD = $(LDADD)
NORM_DEPENDENCIES =
NORM_LDFLAGS =
am_POW_OBJECTS = POW.$(OBJEXT) test.$(OBJEXT)
POW_OBJECTS = $(am_POW_OBJECTS)
POW_LDADD = $(LDADD)
POW_DEPENDENCIES =
POW_LDFLAGS =
am_SEQ_OBJECTS = SEQ.$(OBJEXT) test.$(OBJEXT)
SEQ_OBJECTS = $(am_SEQ_OBJECTS)
SEQ_LDADD = $(LDADD)
SEQ_DEPENDENCIES =
SEQ_LDFLAGS =
am_SGE_OBJECTS = SGE.$(OBJEXT) test.$(OBJEXT)
SGE_OBJECTS = $(am_SGE_OBJECTS)
SGE_LDADD = $(LDADD)
SGE_DEPENDENCIES =
SGE_LDFLAGS =
am_SGT_OBJECTS = SGT.$(OBJEXT) test.$(OBJEXT)
SGT_OBJECTS = $(am_SGT_OBJECTS)
SGT_LDADD = $(LDADD)
SGT_DEPENDENCIES =
SGT_LDFLAGS =
am_SIN_OBJECTS = SIN.$(OBJEXT) test.$(OBJEXT)
SIN_OBJECTS = $(am_SIN_OBJECTS)
SIN_LDADD = $(LDADD)
SIN_DEPENDENCIES =
SIN_LDFLAGS =
am_SLE_OBJECTS = SLE.$(OBJEXT) test.$(OBJEXT)
SLE_OBJECTS = $(am_SLE_OBJECTS)
SLE_LDADD = $(LDADD)
SLE_DEPENDENCIES =
SLE_LDFLAGS =
am_SLT_OBJECTS = SLT.$(OBJEXT) test.$(OBJEXT)
SLT_OBJECTS = $(am_SLT_OBJECTS)
SLT_LDADD = $(LDADD)
SLT_DEPENDENCIES =
SLT_LDFLAGS =
am_SNE_OBJECTS = SNE.$(OBJEXT) test.$(OBJEXT)
SNE_OBJECTS = $(am_SNE_OBJECTS)
SNE_LDADD = $(LDADD)
SNE_DEPENDENCIES =
SNE_LDFLAGS =
am_SQRT_OBJECTS = SQRT.$(OBJEXT) test.$(OBJEXT)
SQRT_OBJECTS = $(am_SQRT_OBJECTS)
SQRT_LDADD = $(LDADD)
SQRT_DEPENDENCIES =
SQRT_LDFLAGS =
am_TAN_OBJECTS = TAN.$(OBJEXT) test.$(OBJEXT)
TAN_OBJECTS = $(am_TAN_OBJECTS)
TAN_LDADD = $(LDADD)
TAN_DEPENDENCIES =
TAN_LDFLAGS =
am_XPD_OBJECTS = XPD.$(OBJEXT) test.$(OBJEXT)
XPD_OBJECTS = $(am_XPD_OBJECTS)
XPD_LDADD = $(LDADD)
XPD_DEPENDENCIES =
XPD_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ABS.Po ./$(DEPDIR)/ACOS.Po \
	./$(DEPDIR)/ADD.Po ./$(DEPDIR)/ASIN.Po \
	./$(DEPDIR)/ATAN.Po ./$(DEPDIR)/ATAN2.Po \
	./$(DEPDIR)/CEIL.Po ./$(DEPDIR)/COND.Po \
	./$(DEPDIR)/COS.Po ./$(DEPDIR)/DIV.Po \
	./$(DEPDIR)/DOT.Po ./$(DEPDIR)/EXP.Po \
	./$(DEPDIR)/EXP10.Po ./$(DEPDIR)/EXP2.Po \
	./$(DEPDIR)/FLR.Po ./$(DEPDIR)/FRAC.Po \
	./$(DEPDIR)/LOG.Po ./$(DEPDIR)/LOG10.Po \
	./$(DEPDIR)/LOG2.Po ./$(DEPDIR)/LRP.Po \
	./$(DEPDIR)/MAD.Po ./$(DEPDIR)/MAX.Po \
	./$(DEPDIR)/MIN.Po ./$(DEPDIR)/MOD.Po \
	./$(DEPDIR)/MUL.Po ./$(DEPDIR)/NORM.Po \
	./$(DEPDIR)/POW.Po ./$(DEPDIR)/SEQ.Po \
	./$(DEPDIR)/SGE.Po ./$(DEPDIR)/SGT.Po \
	./$(DEPDIR)/SIN.Po ./$(DEPDIR)/SLE.Po \
	./$(DEPDIR)/SLT.Po ./$(DEPDIR)/SNE.Po \
	./$(DEPDIR)/SQRT.Po ./$(DEPDIR)/TAN.Po \
	./$(DEPDIR)/XPD.Po ./$(DEPDIR)/test.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(ABS_SOURCES) $(ACOS_SOURCES) $(ADD_SOURCES) \
	$(ASIN_SOURCES) $(ATAN_SOURCES) $(ATAN2_SOURCES) \
	$(CEIL_SOURCES) $(COND_SOURCES) $(COS_SOURCES) $(DIV_SOURCES) \
	$(DOT_SOURCES) $(EXP_SOURCES) $(EXP10_SOURCES) $(EXP2_SOURCES) \
	$(FLR_SOURCES) $(FRAC_SOURCES) $(LOG_SOURCES) $(LOG10_SOURCES) \
	$(LOG2_SOURCES) $(LRP_SOURCES) $(MAD_SOURCES) $(MAX_SOURCES) \
	$(MIN_SOURCES) $(MOD_SOURCES) $(MUL_SOURCES) $(NORM_SOURCES) \
	$(POW_SOURCES) $(SEQ_SOURCES) $(SGE_SOURCES) $(SGT_SOURCES) \
	$(SIN_SOURCES) $(SLE_SOURCES) $(SLT_SOURCES) $(SNE_SOURCES) \
	$(SQRT_SOURCES) $(TAN_SOURCES) $(XPD_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(ABS_SOURCES) $(ACOS_SOURCES) $(ADD_SOURCES) $(ASIN_SOURCES) $(ATAN_SOURCES) $(ATAN2_SOURCES) $(CEIL_SOURCES) $(COND_SOURCES) $(COS_SOURCES) $(DIV_SOURCES) $(DOT_SOURCES) $(EXP_SOURCES) $(EXP10_SOURCES) $(EXP2_SOURCES) $(FLR_SOURCES) $(FRAC_SOURCES) $(LOG_SOURCES) $(LOG10_SOURCES) $(LOG2_SOURCES) $(LRP_SOURCES) $(MAD_SOURCES) $(MAX_SOURCES) $(MIN_SOURCES) $(MOD_SOURCES) $(MUL_SOURCES) $(NORM_SOURCES) $(POW_SOURCES) $(SEQ_SOURCES) $(SGE_SOURCES) $(SGT_SOURCES) $(SIN_SOURCES) $(SLE_SOURCES) $(SLT_SOURCES) $(SNE_SOURCES) $(SQRT_SOURCES) $(TAN_SOURCES) $(XPD_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/regress/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
ABS$(EXEEXT): $(ABS_OBJECTS) $(ABS_DEPENDENCIES) 
	@rm -f ABS$(EXEEXT)
	$(CXXLINK) $(ABS_LDFLAGS) $(ABS_OBJECTS) $(ABS_LDADD) $(LIBS)
ACOS$(EXEEXT): $(ACOS_OBJECTS) $(ACOS_DEPENDENCIES) 
	@rm -f ACOS$(EXEEXT)
	$(CXXLINK) $(ACOS_LDFLAGS) $(ACOS_OBJECTS) $(ACOS_LDADD) $(LIBS)
ADD$(EXEEXT): $(ADD_OBJECTS) $(ADD_DEPENDENCIES) 
	@rm -f ADD$(EXEEXT)
	$(CXXLINK) $(ADD_LDFLAGS) $(ADD_OBJECTS) $(ADD_LDADD) $(LIBS)
ASIN$(EXEEXT): $(ASIN_OBJECTS) $(ASIN_DEPENDENCIES) 
	@rm -f ASIN$(EXEEXT)
	$(CXXLINK) $(ASIN_LDFLAGS) $(ASIN_OBJECTS) $(ASIN_LDADD) $(LIBS)
ATAN$(EXEEXT): $(ATAN_OBJECTS) $(ATAN_DEPENDENCIES) 
	@rm -f ATAN$(EXEEXT)
	$(CXXLINK) $(ATAN_LDFLAGS) $(ATAN_OBJECTS) $(ATAN_LDADD) $(LIBS)
ATAN2$(EXEEXT): $(ATAN2_OBJECTS) $(ATAN2_DEPENDENCIES) 
	@rm -f ATAN2$(EXEEXT)
	$(CXXLINK) $(ATAN2_LDFLAGS) $(ATAN2_OBJECTS) $(ATAN2_LDADD) $(LIBS)
CEIL$(EXEEXT): $(CEIL_OBJECTS) $(CEIL_DEPENDENCIES) 
	@rm -f CEIL$(EXEEXT)
	$(CXXLINK) $(CEIL_LDFLAGS) $(CEIL_OBJECTS) $(CEIL_LDADD) $(LIBS)
COND$(EXEEXT): $(COND_OBJECTS) $(COND_DEPENDENCIES) 
	@rm -f COND$(EXEEXT)
	$(CXXLINK) $(COND_LDFLAGS) $(COND_OBJECTS) $(COND_LDADD) $(LIBS)
COS$(EXEEXT): $(COS_OBJECTS) $(COS_DEPENDENCIES) 
	@rm -f COS$(EXEEXT)
	$(CXXLINK) $(COS_LDFLAGS) $(COS_OBJECTS) $(COS_LDADD) $(LIBS)
DIV$(EXEEXT): $(DIV_OBJECTS) $(DIV_DEPENDENCIES) 
	@rm -f DIV$(EXEEXT)
	$(CXXLINK) $(DIV_LDFLAGS) $(DIV_OBJECTS) $(DIV_LDADD) $(LIBS)
DOT$(EXEEXT): $(DOT_OBJECTS) $(DOT_DEPENDENCIES) 
	@rm -f DOT$(EXEEXT)
	$(CXXLINK) $(DOT_LDFLAGS) $(DOT_OBJECTS) $(DOT_LDADD) $(LIBS)
EXP$(EXEEXT): $(EXP_OBJECTS) $(EXP_DEPENDENCIES) 
	@rm -f EXP$(EXEEXT)
	$(CXXLINK) $(EXP_LDFLAGS) $(EXP_OBJECTS) $(EXP_LDADD) $(LIBS)
EXP10$(EXEEXT): $(EXP10_OBJECTS) $(EXP10_DEPENDENCIES) 
	@rm -f EXP10$(EXEEXT)
	$(CXXLINK) $(EXP10_LDFLAGS) $(EXP10_OBJECTS) $(EXP10_LDADD) $(LIBS)
EXP2$(EXEEXT): $(EXP2_OBJECTS) $(EXP2_DEPENDENCIES) 
	@rm -f EXP2$(EXEEXT)
	$(CXXLINK) $(EXP2_LDFLAGS) $(EXP2_OBJECTS) $(EXP2_LDADD) $(LIBS)
FLR$(EXEEXT): $(FLR_OBJECTS) $(FLR_DEPENDENCIES) 
	@rm -f FLR$(EXEEXT)
	$(CXXLINK) $(FLR_LDFLAGS) $(FLR_OBJECTS) $(FLR_LDADD) $(LIBS)
FRAC$(EXEEXT): $(FRAC_OBJECTS) $(FRAC_DEPENDENCIES) 
	@rm -f FRAC$(EXEEXT)
	$(CXXLINK) $(FRAC_LDFLAGS) $(FRAC_OBJECTS) $(FRAC_LDADD) $(LIBS)
LOG$(EXEEXT): $(LOG_OBJECTS) $(LOG_DEPENDENCIES) 
	@rm -f LOG$(EXEEXT)
	$(CXXLINK) $(LOG_LDFLAGS) $(LOG_OBJECTS) $(LOG_LDADD) $(LIBS)
LOG10$(EXEEXT): $(LOG10_OBJECTS) $(LOG10_DEPENDENCIES) 
	@rm -f LOG10$(EXEEXT)
	$(CXXLINK) $(LOG10_LDFLAGS) $(LOG10_OBJECTS) $(LOG10_LDADD) $(LIBS)
LOG2$(EXEEXT): $(LOG2_OBJECTS) $(LOG2_DEPENDENCIES) 
	@rm -f LOG2$(EXEEXT)
	$(CXXLINK) $(LOG2_LDFLAGS) $(LOG2_OBJECTS) $(LOG2_LDADD) $(LIBS)
LRP$(EXEEXT): $(LRP_OBJECTS) $(LRP_DEPENDENCIES) 
	@rm -f LRP$(EXEEXT)
	$(CXXLINK) $(LRP_LDFLAGS) $(LRP_OBJECTS) $(LRP_LDADD) $(LIBS)
MAD$(EXEEXT): $(MAD_OBJECTS) $(MAD_DEPENDENCIES) 
	@rm -f MAD$(EXEEXT)
	$(CXXLINK) $(MAD_LDFLAGS) $(MAD_OBJECTS) $(MAD_LDADD) $(LIBS)
MAX$(EXEEXT): $(MAX_OBJECTS) $(MAX_DEPENDENCIES) 
	@rm -f MAX$(EXEEXT)
	$(CXXLINK) $(MAX_LDFLAGS) $(MAX_OBJECTS) $(MAX_LDADD) $(LIBS)
MIN$(EXEEXT): $(MIN_OBJECTS) $(MIN_DEPENDENCIES) 
	@rm -f MIN$(EXEEXT)
	$(CXXLINK) $(MIN_LDFLAGS) $(MIN_OBJECTS) $(MIN_LDADD) $(LIBS)
MOD$(EXEEXT): $(MOD_OBJECTS) $(MOD_DEPENDENCIES) 
	@rm -f MOD$(EXEEXT)
	$(CXXLINK) $(MOD_LDFLAGS) $(MOD_OBJECTS) $(MOD_LDADD) $(LIBS)
MUL$(EXEEXT): $(MUL_OBJECTS) $(MUL_DEPENDENCIES) 
	@rm -f MUL$(EXEEXT)
	$(CXXLINK) $(MUL_LDFLAGS) $(MUL_OBJECTS) $(MUL_LDADD) $(LIBS)
NORM$(EXEEXT): $(NORM_OBJECTS) $(NORM_DEPENDENCIES) 
	@rm -f NORM$(EXEEXT)
	$(CXXLINK) $(NORM_LDFLAGS) $(NORM_OBJECTS) $(NORM_LDADD) $(LIBS)
POW$(EXEEXT): $(POW_OBJECTS) $(POW_DEPENDENCIES) 
	@rm -f POW$(EXEEXT)
	$(CXXLINK) $(POW_LDFLAGS) $(POW_OBJECTS) $(POW_LDADD) $(LIBS)
SEQ$(EXEEXT): $(SEQ_OBJECTS) $(SEQ_DEPENDENCIES) 
	@rm -f SEQ$(EXEEXT)
	$(CXXLINK) $(SEQ_LDFLAGS) $(SEQ_OBJECTS) $(SEQ_LDADD) $(LIBS)
SGE$(EXEEXT): $(SGE_OBJECTS) $(SGE_DEPENDENCIES) 
	@rm -f SGE$(EXEEXT)
	$(CXXLINK) $(SGE_LDFLAGS) $(SGE_OBJECTS) $(SGE_LDADD) $(LIBS)
SGT$(EXEEXT): $(SGT_OBJECTS) $(SGT_DEPENDENCIES) 
	@rm -f SGT$(EXEEXT)
	$(CXXLINK) $(SGT_LDFLAGS) $(SGT_OBJECTS) $(SGT_LDADD) $(LIBS)
SIN$(EXEEXT): $(SIN_OBJECTS) $(SIN_DEPENDENCIES) 
	@rm -f SIN$(EXEEXT)
	$(CXXLINK) $(SIN_LDFLAGS) $(SIN_OBJECTS) $(SIN_LDADD) $(LIBS)
SLE$(EXEEXT): $(SLE_OBJECTS) $(SLE_DEPENDENCIES) 
	@rm -f SLE$(EXEEXT)
	$(CXXLINK) $(SLE_LDFLAGS) $(SLE_OBJECTS) $(SLE_LDADD) $(LIBS)
SLT$(EXEEXT): $(SLT_OBJECTS) $(SLT_DEPENDENCIES) 
	@rm -f SLT$(EXEEXT)
	$(CXXLINK) $(SLT_LDFLAGS) $(SLT_OBJECTS) $(SLT_LDADD) $(LIBS)
SNE$(EXEEXT): $(SNE_OBJECTS) $(SNE_DEPENDENCIES) 
	@rm -f SNE$(EXEEXT)
	$(CXXLINK) $(SNE_LDFLAGS) $(SNE_OBJECTS) $(SNE_LDADD) $(LIBS)
SQRT$(EXEEXT): $(SQRT_OBJECTS) $(SQRT_DEPENDENCIES) 
	@rm -f SQRT$(EXEEXT)
	$(CXXLINK) $(SQRT_LDFLAGS) $(SQRT_OBJECTS) $(SQRT_LDADD) $(LIBS)
TAN$(EXEEXT): $(TAN_OBJECTS) $(TAN_DEPENDENCIES) 
	@rm -f TAN$(EXEEXT)
	$(CXXLINK) $(TAN_LDFLAGS) $(TAN_OBJECTS) $(TAN_LDADD) $(LIBS)
XPD$(EXEEXT): $(XPD_OBJECTS) $(XPD_DEPENDENCIES) 
	@rm -f XPD$(EXEEXT)
	$(CXXLINK) $(XPD_LDFLAGS) $(XPD_OBJECTS) $(XPD_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ABS.Po
include ./$(DEPDIR)/ACOS.Po
include ./$(DEPDIR)/ADD.Po
include ./$(DEPDIR)/ASIN.Po
include ./$(DEPDIR)/ATAN.Po
include ./$(DEPDIR)/ATAN2.Po
include ./$(DEPDIR)/CEIL.Po
include ./$(DEPDIR)/COND.Po
include ./$(DEPDIR)/COS.Po
include ./$(DEPDIR)/DIV.Po
include ./$(DEPDIR)/DOT.Po
include ./$(DEPDIR)/EXP.Po
include ./$(DEPDIR)/EXP10.Po
include ./$(DEPDIR)/EXP2.Po
include ./$(DEPDIR)/FLR.Po
include ./$(DEPDIR)/FRAC.Po
include ./$(DEPDIR)/LOG.Po
include ./$(DEPDIR)/LOG10.Po
include ./$(DEPDIR)/LOG2.Po
include ./$(DEPDIR)/LRP.Po
include ./$(DEPDIR)/MAD.Po
include ./$(DEPDIR)/MAX.Po
include ./$(DEPDIR)/MIN.Po
include ./$(DEPDIR)/MOD.Po
include ./$(DEPDIR)/MUL.Po
include ./$(DEPDIR)/NORM.Po
include ./$(DEPDIR)/POW.Po
include ./$(DEPDIR)/SEQ.Po
include ./$(DEPDIR)/SGE.Po
include ./$(DEPDIR)/SGT.Po
include ./$(DEPDIR)/SIN.Po
include ./$(DEPDIR)/SLE.Po
include ./$(DEPDIR)/SLT.Po
include ./$(DEPDIR)/SNE.Po
include ./$(DEPDIR)/SQRT.Po
include ./$(DEPDIR)/TAN.Po
include ./$(DEPDIR)/XPD.Po
include ./$(DEPDIR)/test.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am


clean:
	rm -f *.log
	rm -f testlist
	rm -f $(TESTS)
	rm -f *.o
	rm -f $(TESTS:=.cpp)
	rm -rf .libs

%.check: %
	@for j in $(BACKENDS) ; do ./$< $$j 2> $*.$$j.log ; done

check: $(TESTS:=.check)

testlist: ./regress.py
	./regress.py > testlist
ADD.cpp: testlist
MUL.cpp: testlist
DIV.cpp: testlist
SLT.cpp: testlist
SLE.cpp: testlist
SGT.cpp: testlist
SGE.cpp: testlist
SEQ.cpp: testlist
SNE.cpp: testlist
ABS.cpp: testlist
ACOS.cpp: testlist
ASIN.cpp: testlist
ATAN.cpp: testlist
ATAN2.cpp: testlist
CEIL.cpp: testlist
COS.cpp: testlist
DOT.cpp: testlist
EXP.cpp: testlist
EXP2.cpp: testlist
EXP10.cpp: testlist
FLR.cpp: testlist
FRAC.cpp: testlist
LRP.cpp: testlist
MAD.cpp: testlist
MAX.cpp: testlist
MIN.cpp: testlist
MOD.cpp: testlist
LOG.cpp: testlist
LOG2.cpp: testlist
LOG10.cpp: testlist
POW.cpp: testlist
SIN.cpp: testlist
SQRT.cpp: testlist
TAN.cpp: testlist
NORM.cpp: testlist
XPD.cpp: testlist
COND.cpp: testlist
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
