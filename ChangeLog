2003-08-26  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShBitSet.hpp, src/ShBitSet.cpp: Added operator== and operator!=.

	* src/ShLib.hpp (kill): Pass in the extra argument to SH_OP_KIL.

	* src/ShStatement.cpp: Make KIL take one (ignored) argument. This
	is useful for the optimzer. Added OPTBRA instruction info.

	* src/ShStatement.hpp: Data structures for ud/du chains, added
	OPTBRA instruction for the optimizer. Use src[3] instead of src1,
	src2, src3 in ShStatement.

	* src/ShOptimizer.cpp, src/ShOptimizer.hpp: Added du/ud-chain
	construction and dead code elimination. Lots and lots of code.

2003-08-25  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/Makefile.am (CXXFLAGS): Enable optimizations.

	* src/ShStatement.hpp: Add an XPD statement.

	* src/ShVariableNode.cpp (ShVariableNode): Initialize variables
	with 0 in each element.

	* src/ShMatrixImpl.hpp (ShMatrix): Initialize matrices with
	identity matrices.

	* src/ShLib.hpp (cross): Add a cross product routine for 3-tuples.

2003-08-22  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShOptimizer.cpp (copyValue): Improve efficiency slightly.

	* test/bitset.cpp: Added simple bitset test.

	* src/ShBitSet.cpp, src/ShBitSet.hpp: Added ShBitSet class for the
	optimizer.

2003-08-20  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShStatement.cpp (operator<<): Print negations.

	* src/ShBasicBlock.hpp (ShBasicBlock::erase): Return the result of
	the erase operation (i.e. the iterator one past the erased element).

	* src/ShOptimizer.cpp: Improved the iterate-erase loops used in
	the optimizations.

2003-08-19  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShOptimizer.cpp (struct TempFinder): Mark temporaries used
	in branches as necessary.

	* src/ShEnvironment.hpp (struct ShEnvironment): Added the
	optimizationLevel variable indication the level of
	optimizations. Set this to 1 to turn on optimizations.

	* src/ShSyntax.cpp (shEndShader): Run the optimizer after parsing.

	* src/ShOptimizer.hpp, src/ShOptimizer.cpp: Added (simple) copy
	propagation, "move elimination" and unused temporary removal.

2003-08-11  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShAttrib.hpp (operator+=, operator-=): Added these operators
	for Attrib1's to once again avoid having to wrap constants in
	ShConstant1f()s.

	* src/ShLib.hpp: Added SH_SHLIB_CONST* macros and calls to these
	to allow scalar constants in operations not have to be wrapped in
	ShConstant1f(). This should make using the library _far_ more
	convenient :).

2003-08-08  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShLib.hpp (cond): Allow scalar cond().

	* backends/sm/ShSmBackend.cpp (addBasicBlock): Support scalar COND instructions.

	* backends/arb/ShArb.cpp (genNode): Support scalar COND instructions.

2003-08-07  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* configure.ac, bootstrap, config/*.m4: Split off some useful
	utility functions into their own M4 files, making the configure.ac
	slightly less verbose.

	* doc/Makefile.am: Added proper rules to build the documentation
	and install/upload it as well.

