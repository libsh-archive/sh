2004-01-19  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/Sh{Stream,Channel,ChannelNode}{,Impl}.{c,h}pp: Renamed
	streams to channels, stream lists to streams, removed
	ShCombinedStream, added operators to connect the new dynamic
	streams to ShPrograms, following Mike's new naming suggestions.

2004-01-18  Bryan Chan  <b8chan@cgl.uwaterloo.ca>
	* util/ShWorley.cpp: Added good worley bump-mapping
	
	* backends/ati/ShArb.?pp, backends/sm/ShSmBackend.?pp:
	Changed boolean <,<=,>,>=,==,!= operators to accept vec/vec
	and scalar/vec arguments in addition to original vec/scalar.

	* src/ShFixedManipulator.??: Rewrote these from scratch.
	  Added shDup.
	
2004-01-17  Bryan Chan  <b8chan@cgl.uwaterloo.ca>
	* src/ShFixedManipulator.??: Added shKeep, shLose
	manipulators that support combine with ShProgram and 
	other ShFixedManipulators.

	* src/ShManipulator.?pp, src/ShManipulatorImpl.hpp:
	Reworked all manipulators to take string parameters as well.           

	* src/ShSyntax.hpp, src/ShAlgebra.hpp, util/ShKernelLib.?pp: 
	Added macros to declare vars with names, and updated util 
	nibbles/kernels with names.

	* src/ShManipulatorImpl.hpp: Removed default 0 value for
	extra inputs when connecting an input manipulator
	(Reverts to old behaviour of passing through the channel)

	* src/ShAlgebra.hpp: added >> operator for replaceUniform
	* src/ShAlgebra.cpp: changed connect to handle outputs > inputs
	* src/ShLib.hpp: added pow(x, exp) function
	* src/ShProgram.?pp, src/ShVariableNode.?pp: added methods
	to print variables/variable lists for displaying algebra errors
	
2004-01-15.5  Bryan Chan  <b8chan@enora.cgl.uwaterloo.ca>
	* src/Makefile.am: Added missing headers

	* src/ShManipulator.?pp: Added input manipulation
	  (unsed input channels are given default value of 0)

	* util/ShKernelLib.hpp, util/ShKernelLibImpl.hpp,
	  util/ShKernelLib.cpp: Added a few useful kernels and nibbles

	* src/ShAlgebra.cpp: Changed connect/combine(p,q) to use
	  p's target (instead of "") if p.target == q.target
	
2004-01-15  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* test/stream.cpp: Added initial stream test.

	* src/ShAttrib.hpp (ShAttrib), src/ShSpecialType.hpp
	(ShSpecialType), ...: Added special_type.

	* src/ShStatement.hpp (ShOperation), src/ShStatement.cpp (opInfo):
	Added SH_OP_FETCH for streams.

	* src/ShStream.hpp, src/ShStreamImpl.hpp, src/ShStreamNode.hpp,
	src/ShStreamNode.cpp: Added (the start of) a stream abstraction.

	* test/algebra.sht: Use operator&() instead of operator+() for
	combine().

	* test/test.footer: Massage the control graph dump filename a bit
	to avoid libtool ugliness.

	* src/ShCtrlGraph.hpp (ShCtrlGraphNode): Add private real_dfs()
	template member function.
	(ShCtrlGraphNode::real_dfs): Renamed dfs() to real_dfs().
	(ShCtrlGraphNode::dfs): Added new dfs() function that wraps
	real_dfs() call with clearMarked().
	(ShCtrlGraph::dfs): Remove now unnecessary clearMarked() calls.

2004-01-14  Bryan Chan  <b8chan@enora.cgl.uwaterloo.ca>

	* src/ShManipulator.cpp (operator<<): Changed SEQ to ASN.

	* backends/arb/ShArb.cpp: Added SEQ operation support

	* src/ShManipulator.?pp: Bug fixes (lots of unmentionable idiocy)

	* src/ShAlgebra.cpp, ShVariableNode.?pp : Better error message 
	for invalid ShProgram connect (prints output/input types)

2004-01-14  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShAlgebra.cpp (copyCtrlGraph): Clear head before we do a dfs
	on it. Also, change the /new/ nodes instead of the old ones in the
	successor-changing loop. Furthermore, it would be a good idea to
	copy blocks instead of referring to old ones. Aka the "evidence
	that Stefanus can't code" patch.

2004-01-14  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShProgram.hpp, ...: Rename "shader kind" to "shader target",
	make targets strings instead of ints.

2004-01-12  Bryan Chan  <b8chan@enora.cgl.uwaterloo.ca>

	* src/ShAlgebra.cpp (replaceUniform): Implemented replaceUniform().

	* src/ShAlgebra.hpp: Added replaceUniform prototype.

2003-11-24  Bryan Chan (b8chan@cgl.uwaterloo.ca)
  
	* src/ShMemoryObject.hpp, src/ShMemoryObject.cpp, backends/arb/ShArb.cpp:
	Experimental implementation of memory objects for über buffer support.

	* src/ShTexture.hpp, src/ShTextureImpl.hpp, src/ShTextureNode.hpp,
	src/ShTextureNode.cpp, util/ShPerlin.hpp, util/ShPerlin.cpp: Added
	3D Texture support.

2003-11-21  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShOptimizer.cpp (MoveEliminator): Don't eliminate moves
	where the RHS is negated (that's a legitimate move).
	(CopyPropagator): Assign negations properly in copy propagation.

	* src/ShAlgebra.cpp (copyCtrlGraph): Added a clearMarked() call
	before we do a DFS on the graph node that's to be copied. This
	makes Tibi's life much better.

2003-11-17 Kevin Moule (krmoule@cgl.uwaterloo.ca)

	* backends/arb/ShArb.cpp: re-added Backend instance, accidentally
	removed during WIN32 port

2003-11-16 Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* util/Makefile.am, util/Perlin.cpp, util/Perlin.hpp,
	util/ShPerlin.cpp, util/ShPerlin.hpp, util/ShUtilLib.hpp,
	util/ShWorley.cpp, util/ShWorley.hpp, util/Worley.cpp,
	util/Worley.hpp, util/shutil.hpp: fixed some include bugs in utils
	renamed utils to match other sh files

2003-11-16  Kevin Moule (krmoule@cgl.uwaterloo.ca)

	* src/ShInit.cpp: ifdef's for WIN32 only code...

	* src/Makefile.am: Added ShInit.cpp

	* backends/arb/ShArb.cpp: ifdef's for wglGetProcAddress

2003-11-14  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* util/shutil.hpp: more doc fixing

	* util/Makefile.am, util/Perlin.hpp, util/ShUtilLib.hpp,
	util/shutil.hpp: fixed some doc output bugs

	* doc/Doxyfile, doc/Makefile.am: updated for libshutil

	* config/ltdl.m4: Changed ltdl.m4 back to the version that comes
	with automake 1.4-p6

	* Makefile.am, configure.ac: Added util directory

	* backends/arb/ShArb.cpp, backends/arb/ShArb.hpp: Stefanus' fix
	for write masking. Changed dot product to accept scalars.

	* backends/sm/ShSmBackend.cpp: Changed dot to accept scalars

	* src/ShLib.hpp: Made dot product also accept scalars

	* util/Makefile.am, util/Perlin.cpp, util/Perlin.hpp,
	util/ShUtilLib.hpp, util/Worley.cpp, util/Worley.hpp: Initial
	checkin of utilities including hash functions, Perlin noise and
	Worley textures

2003-11-11  Kevin Moule (krmoule@cgl.uwaterloo.ca)

	* win32/.cvsignore, win32/sh.sln, win32/sh.suo, win32/sh.vcproj:
	WIN32 build files...

	* src/ShMatrix.hpp, src/ShMatrixImpl.hpp: cosmetic changes...

	* src/sh.hpp, src/ShInit.cpp: added ShInit function...

	* backends/arb/ShArb.cpp: sweeping changes for WIN32 build...

2003-11-06  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShMatrix.hpp: fixed shadowed template parameter compile
	warnings in gcc3.3.2

2003-10-31  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShLib.hpp: fixed bug introduced by me to fix another bug (for
	mad dimension checking)

2003-10-31  Kevin Moule (krmoule@cgl.uwaterloo.ca)

	* src/ShOptimizer.hpp: friend classes renamed to struct as per cpp
	file

	* src/ShOptimizer.cpp: unsigned changes for vector::size()

	* src/ShMatrixImpl.hpp: typo

	* src/ShMatrix.hpp: proper syntax for template friend functions

	* src/ShDomTree.hpp: missing header file for std::find()

	* src/ShBitSet.cpp: operator= missing return values...

	* src/ShAlgebra.cpp: for scoping rules for WIN32...

2003-10-30  Kevin Moule (krmoule@cgl.uwaterloo.ca)

	* backends/arb/ShArb.hpp: ArbInst/ArbReg are structs not classes...

	* src/ShVariableNode.cpp: cleanup for warnings generated under WIN32...

	* src/ShToken.hpp: ShTokenArgument is actually a struct...

	* src/ShSwizzle.cpp: warnings and improper C++ syntax under WIN32...

	* src/ShImage.cpp: binary mode fopen needed for WIN32

	* src/ShBitSet.cpp: cleanup for WIN32 warnings...

	* src/ShBackend.cpp: WIN32 changes for ltdl...

2003-10-24  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShAlgebra.cpp: small fix because I can't tell the difference
	  between != and ==

	* src/ShLib.hpp: Added dimension checks for mad, lerp, fmod

	* src/ShLinearAllocator.cpp: Changed linear allocator to use
	multiset

2003-10-22  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* backends/arb/ShArb.cpp, backends/sm/ShSmBackend.cpp, src/ShLib.hpp,
	src/ShStatement.cpp, src/ShStatement.hpp: Added mad (Multiply & Add)
	operation

2003-10-17  Gabriel Renaud (g2renaud@cgl.uwaterloo.ca)

	* src/ShAttrib.hpp, src/ShDomTree.cpp, src/ShDomTree.hpp,
	src/ShMatrix.hpp, src/ShMatrixImpl.hpp, src/ShVariable.cpp,
	src/ShVariable.hpp: Change ShMatrix.hpp, ShAttrib, and ShVariable,
	so that we have matrix operations and output on the console

2003-10-16  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShLib.hpp, src/ShStatement.cpp, src/ShStatement.hpp: Added
	floor, ceil, lerp, fmod.

	* backends/sm/ShSmBackend.cpp: Added ceil, floor, fmod, lerp ops

	* backends/arb/ShArb.cpp, backends/arb/ShArb.hpp: Added abs, ceil,
	floor, fmod, lerp, sle, and sge ops.  Added sin/cos not implemented
	warnings in vertex programs

2003-10-15  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShLinearAllocator.cpp: Fixed allocation for common
	starters/enders

2003-10-13  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShOptimizer.cpp: Backed out changes for error messages

2003-10-08  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* src/ShError.cpp, src/ShError.hpp: Added improved error handling

2003-10-06  Bryan Chan (b8chan@cgl.uwaterloo.ca)

	* backends/sm/ShSmBackend.cpp, src/Makefile.am, src/ShAlgebra.cpp,
	src/ShBitSet.cpp, src/ShEnvironment.cpp, src/ShEnvironment.hpp,
	src/ShException.cpp, src/ShException.hpp, src/ShImage.cpp,
	src/ShOptimizer.cpp, src/ShParser.cpp, src/ShProgram.cpp,
	src/ShSwizzle.cpp, src/ShTokenizer.cpp: Added ShError for error
	handling
	
2003-09-02  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* test/*.sht: Update to use new program specification syntax.
	
	* src/ShBackend.hpp: Make generateCode() take a program kind.

	* backends/arb/ShArb.hpp: Update backend to take program kind in
	generateCode().

	* backends/sm/ShSmBackend.hpp: Update backend to take program kind
	in generateCode().

	* src/ShAlgebra.cpp (connect, combine): Allow generic programs and
	determine the resulting program kind appropriately.

	* src/ShAlgebra.hpp: Use generic programs in lose and keep.

	* src/ShSyntax.cpp (shCompileShader): Add bodies for
	shCompileShader.

	* src/ShSyntax.hpp (SH_VERTEX_PROGRAM, SH_FRAGMENT_PROGRAM):
	Rename to these instead of SH_{VERTEX,FRAGMENT}_SHADER.
	(SH_BEGIN_VERTEX_PROGRAM, SH_BEGIN_FRAGMENT_PROGRAM): Add these.
	(SH_BEGIN_PROGRAM): Allow generic programs (without kinds).
	(shCompileShader): Add these functions.

	* src/ShProgram.hpp, src/ShProgram.cpp: Make shader kinds optional.

2003-08-27  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShAlgebra.hpp: Added operator<<, operator+, lose and keep.

	* src/ShAlgebra.cpp: Added operator<< and operator+ for programs.

	* src/ShOptimizer.hpp, src/ShOptimizer.cpp: Added straightening.
	Loop over optimizations until a fixed point is reached.

	* src/ShCtrlGraph.hpp: Added constructor taking a tail and a head,
	for the ShAlgebra operations.

	* src/sh.hpp: Added ShAlgebra.hpp to included files.

	* src/ShAlgebra.cpp, src/ShAlgebra.hpp: Added combine and connect
	functions.

2003-08-26  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShBitSet.hpp, src/ShBitSet.cpp: Added operator== and operator!=.

	* src/ShLib.hpp (kill): Pass in the extra argument to SH_OP_KIL.

	* src/ShStatement.cpp: Make KIL take one (ignored) argument. This
	is useful for the optimzer. Added OPTBRA instruction info.

	* src/ShStatement.hpp: Data structures for ud/du chains, added
	OPTBRA instruction for the optimizer. Use src[3] instead of src1,
	src2, src3 in ShStatement.

	* src/ShOptimizer.cpp, src/ShOptimizer.hpp: Added du/ud-chain
	construction and dead code elimination. Lots and lots of code.

2003-08-25  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/Makefile.am (CXXFLAGS): Enable optimizations.

	* src/ShStatement.hpp: Add an XPD statement.

	* src/ShVariableNode.cpp (ShVariableNode): Initialize variables
	with 0 in each element.

	* src/ShMatrixImpl.hpp (ShMatrix): Initialize matrices with
	identity matrices.

	* src/ShLib.hpp (cross): Add a cross product routine for 3-tuples.

2003-08-22  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShOptimizer.cpp (copyValue): Improve efficiency slightly.

	* test/bitset.cpp: Added simple bitset test.

	* src/ShBitSet.cpp, src/ShBitSet.hpp: Added ShBitSet class for the
	optimizer.

2003-08-20  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShStatement.cpp (operator<<): Print negations.

	* src/ShBasicBlock.hpp (ShBasicBlock::erase): Return the result of
	the erase operation (i.e. the iterator one past the erased element).

	* src/ShOptimizer.cpp: Improved the iterate-erase loops used in
	the optimizations.

2003-08-19  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShOptimizer.cpp (struct TempFinder): Mark temporaries used
	in branches as necessary.

	* src/ShEnvironment.hpp (struct ShEnvironment): Added the
	optimizationLevel variable indication the level of
	optimizations. Set this to 1 to turn on optimizations.

	* src/ShSyntax.cpp (shEndShader): Run the optimizer after parsing.

	* src/ShOptimizer.hpp, src/ShOptimizer.cpp: Added (simple) copy
	propagation, "move elimination" and unused temporary removal.

2003-08-11  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShAttrib.hpp (operator+=, operator-=): Added these operators
	for Attrib1's to once again avoid having to wrap constants in
	ShConstant1f()s.

	* src/ShLib.hpp: Added SH_SHLIB_CONST* macros and calls to these
	to allow scalar constants in operations not have to be wrapped in
	ShConstant1f(). This should make using the library _far_ more
	convenient :).

2003-08-08  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* src/ShLib.hpp (cond): Allow scalar cond().

	* backends/sm/ShSmBackend.cpp (addBasicBlock): Support scalar COND instructions.

	* backends/arb/ShArb.cpp (genNode): Support scalar COND instructions.

2003-08-07  Stefanus Du Toit  <sjdutoit@uwaterloo.ca>

	* configure.ac, bootstrap, config/*.m4: Split off some useful
	utility functions into their own M4 files, making the configure.ac
	slightly less verbose.

	* doc/Makefile.am: Added proper rules to build the documentation
	and install/upload it as well.
