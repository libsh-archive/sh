import project ;


project.initialize $(__name__) ;
project ltdl ;


rule init ( prefix ? : include-dir ? )
{
  import errors ;

  local include-subdir = share/libtool/libltdl ;

  if ! $(prefix) # prefix not given
  {
    prefix = [ modules.peek : LTDL_PATH ] ;

    if ! $(prefix) # env var not found
    {
      if [ path.exists /usr/$(include-subdir)/ltdl.h ]
      {
        prefix = /usr ;
      }

      import os ;
      if ! $(prefix) && [ os.on-unix ]
      {
        errors.error "ltdl: No prefix given, LTDL_PATH empty and default directory not found" ;
      }
    }
  }

  if ! $(include-dir)
  {
     include-dir = $(prefix)/$(include-subdir) ;
  }

  if $(.initialized)
  {
    if $(prefix) != $(.prefix)
    {
      errors.error "ltdl: Reinitialized with different prefix" ;
    }
  }
  else {
    .initialized = true ;
    .prefix = $(prefix) ;

    local usage-requirements =
      <include>$(include-dir)
      <library-path>$(prefix)/lib
      #<dll-path>$(prefix)/lib
    ;

    if [ os.on-unix ]
    {
      lib libltdl
      : # sources
      : # requirements
        <file>$(prefix)/lib/libltdl.so.3
      : # default-build
      : # usage-requirements
        $(usage-requirements)
      ;
    }
    else {
      alias libltdl ;
    }
  }
}
