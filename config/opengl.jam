import project ;


project.initialize $(__name__) ;
project opengl ;


rule init ( prefix ? )
{
	import errors ;

	local include-subdir = include ;

	if ! $(prefix) # prefix not given
	{
		prefix = [ modules.peek : OPENGL_PATH ] ;

		if ! $(prefix) # env var not found
		{
			prefix = [ path.glob-in-parents . : opengl ] ;

			if ! $(prefix) # default path doesn't exist
			{
				echo "opengl: Try to use compiler default header (no prefix given, OPENGL_PATH empty)" ;
			}
		}
	}

	if $(.initialized)
	{
		if $(prefix) != $(.prefix)
		{
			errors.error "opengl: Reinitialized with different prefix" ;
		}
	}
	else {
		.initialized = true ;
		.prefix = $(prefix) ;

		lib user32 : : <name>user32 ;
		lib gdi32 : : <name>gdi32 ;

		local sources-msvc = user32 gdi32 ;

		local usage-requirements =
			<include>$(.prefix)/$(include-subdir)
			<dll-path>$(.prefix)/lib
			<library-path>$(.prefix)/lib
		;

		lib libgl
		: # sources
			$(sources-msvc)
		: # requirements
			<toolset>msvc
			<name>opengl32
		: # default-build
		: # usage-requirements
			$(usage-requirements)
		;

		lib libgl
		: # sources
		: # requirements
			<name>GL
		: # default-build
		: # usage-requirements
			$(usage-requirements)
		;

		lib libglu
		: # sources
			$(sources-msvc)
		: # requirements
			<toolset>msvc
			<name>glu32
		: # default-build
		: # usage-requirements
			$(usage-requirements)
		;

		lib libglu
		: # sources
		: # requirements
			<name>GLU
		: # default-build
		: # usage-requirements
			$(usage-requirements)
		;
	}
}
